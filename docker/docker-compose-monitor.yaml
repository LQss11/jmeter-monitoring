version: '3.8'
services:
  # INFLUXDB SVC
  influxdb:
    image: influxdb:2.0-alpine
    container_name: influxdb
    ports:
        - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      - ./influxdb/datav1.sh:/docker-entrypoint-initdb.d/datav1.sh
    environment: 
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    restart: on-failure:5
    networks:
      - monitoring  
  # GRAFANA SVC
  grafana:
    image: 'grafana/grafana:7.3.0'  
    container_name: grafana
    ports:
        - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    networks:
      - monitoring  
    environment: 
        - "GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}"
        - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}"
    restart: always
    depends_on:
        - influxdb  
  # TELEGRAF SVC
  telegraf:
    #image: telegraf:1.21-alpine
    build: ./telegraf
    pid: "host"  
    container_name: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
        - influxdb
    networks:
      - monitoring  
networks:
  monitoring:
volumes:
  influxdb-storage:
  grafana-storage:
